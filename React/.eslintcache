[{"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\index.js":"1","C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\App.js":"2","C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\reportWebVitals.js":"3","C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\components\\UserCard.js":"4","C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\components\\Button.js":"5","C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\components\\Form.js":"6"},{"size":500,"mtime":1610881622119,"results":"7","hashOfConfig":"8"},{"size":719,"mtime":1611424246441,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":739,"mtime":1611403508627,"results":"11","hashOfConfig":"8"},{"size":556,"mtime":1611405482281,"results":"12","hashOfConfig":"8"},{"size":5078,"mtime":1611405434572,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1blvffa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\index.js",[],["28","29"],"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\App.js",[],"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\reportWebVitals.js",[],"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\components\\UserCard.js",[],"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\components\\Button.js",[],"C:\\Users\\ogulcicek.ILAB\\Documents\\projects\\kodluyoruz\\React\\src\\components\\Form.js",["30","31","32","33","34","35","36"],"import React, { useState } from \"react\"\r\nimport Button from \"./Button\"\r\n\r\nfunction Form() {\r\n  const [date, setDate]         = useState(new Date().toLocaleTimeString())\r\n  const [count, setCount]       = useState(0)\r\n  const [username, setUsername] = useState()\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const [like, setLike] = useState(16)\r\n  const [unlike, setUnlike] = useState(4)\r\n\r\n  // State - setState - HOOK\r\n\r\n  const ctaControl = () => {\r\n    const cta = document.getElementById(\"kayit-ol\"),\r\n          usernameInput = document.getElementById(\"kullanici-adi\"),\r\n          passwordInput = document.getElementById(\"parola\")\r\n  \r\n    if(usernameInput.value !== \"\" && passwordInput.value.length > 3) {\r\n      cta.removeAttribute(\"disabled\")\r\n    }\r\n    else {\r\n      cta.setAttribute(\"disabled\", true)\r\n    }\r\n  }\r\n\r\n  const controlUserName = (e) => {\r\n    setUsername(e.target.value)\r\n    ctaControl()\r\n  }\r\n\r\n  const controlPassword = (e) => {\r\n    const p = e.target.value\r\n    setPassword(p)\r\n\r\n    const parola = document.getElementById(\"parola\")\r\n\r\n    if(p.length > 3) {\r\n      parola.classList.remove(\"is-invalid\")\r\n      parola.classList.add(\"is-valid\")\r\n    }\r\n    else {\r\n      parola.classList.remove(\"is-valid\")\r\n      parola.classList.add(\"is-invalid\")\r\n    }\r\n    \r\n    ctaControl()\r\n  }\r\n\r\n  setInterval(\r\n  () => setDate(new Date().toLocaleTimeString())\r\n  ,\r\n  1000)\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"youtube\">\r\n        <p>\r\n          <a onClick={function() { return setLike(like+1)}}>\r\n          <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"thumbs-up\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-thumbs-up fa-w-16 fa-2x\"><path fill=\"currentColor\" d=\"M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z\" class=\"\"></path></svg>\r\n           ({like})\r\n          </a>\r\n        </p>\r\n\r\n        <p>\r\n          <a onClick={() => setUnlike(unlike+1)}>\r\n            Olumsuz ({unlike})\r\n          </a>\r\n        </p>\r\n        <p>\r\n          Sonuç: {like - unlike}\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <h1>Form</h1>\r\n\r\n        <p>\r\n        Count: { count }\r\n        </p>\r\n        <p>\r\n          Kullanıcı adınız: { username }\r\n        </p>\r\n        <p>\r\n        Parolanız: { password }\r\n        </p>\r\n        <p>\r\n        Anlık Saat: { date }\r\n        </p>\r\n\r\n        <a className=\"button\" onClick={() => setDate(new Date().toLocaleTimeString())}>Saati güncelle</a>\r\n\r\n        <a className=\"button is-primary\" onClick={() => setCount(count + 1)}>\r\n          Arttır\r\n        </a>\r\n        <a className=\"button is-primary\" onClick={() => setCount(count - 1)}>\r\n          Azalt\r\n        </a>\r\n\r\n        <a className=\"button is-primary\" onClick={() => setCount(0)}>\r\n          Sıfırla\r\n        </a>\r\n\r\n        <Button size=\"is-small\" onClick={() => setCount(count + 1)}>\r\n          { count }\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mt-5\">\r\n        <div className=\"form-field\">\r\n          <label>Kullanıcı Adı</label>\r\n          <input type=\"text\" placeholder=\"Kullanıcı adı\" className=\"input\" value={username} id=\"kullanici-adi\" onChange={controlUserName} />\r\n\r\n          <small className=\"input-text\">Boş geçilemez</small>\r\n        </div>\r\n        \r\n        <div className=\"form-field\">\r\n          <label>Parolanız</label>\r\n          <input type=\"password\" id=\"parola\" placeholder=\"Parola\" className=\"input\" value={password} onChange={controlPassword} />\r\n          <small className=\"input-text\">En az 3 karakter</small>\r\n        </div>\r\n      </div>\r\n\r\n      <p>\r\n        <a className=\"button is-large is-success\" id=\"kayit-ol\" disabled>Kayıt Ol</a>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form\r\n\r\n\r\n/*\r\n  let count = 0;\r\n\r\n  function setCount(parametre) {\r\n    count = parametre\r\n  }\r\n\r\ndocument.getElementById(\"button\").addEventListener(\"click\", function() {\r\n  count.innerText = parseInt(count.innerText) + 1\r\n\r\n  setCount(count + 1)\r\n})\r\n\r\n\r\nEcmaScript 6 - arrow Function\r\n() => console.log(count)\r\n\r\n\r\nfunction topla (a, b) {\r\n  return a+b\r\n}\r\n\r\n(a, b) => a+b\r\n\r\n() = parametre\r\n=> return\r\n\r\nfunction deneme() {\r\n\r\n}\r\n\r\nexport function deneme2() {\r\n\r\n}\r\n\r\nconst deneme3 = 5\r\nconst deneme4 = function() {\r\n\r\n}\r\n\r\nconst deneme5 = () => {\r\n  \r\n}\r\n\r\n*/",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":61,"column":11,"nodeType":"43","endLine":61,"endColumn":61},{"ruleId":"41","severity":1,"message":"42","line":68,"column":11,"nodeType":"43","endLine":68,"endColumn":50},{"ruleId":"41","severity":1,"message":"42","line":93,"column":9,"nodeType":"43","endLine":93,"endColumn":88},{"ruleId":"41","severity":1,"message":"42","line":95,"column":9,"nodeType":"43","endLine":95,"endColumn":78},{"ruleId":"41","severity":1,"message":"42","line":98,"column":9,"nodeType":"43","endLine":98,"endColumn":78},{"ruleId":"41","severity":1,"message":"42","line":102,"column":9,"nodeType":"43","endLine":102,"endColumn":70},{"ruleId":"41","severity":1,"message":"42","line":127,"column":9,"nodeType":"43","endLine":127,"endColumn":74},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]